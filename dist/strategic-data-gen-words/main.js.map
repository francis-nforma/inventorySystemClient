{"version":3,"sources":["./src/app/service/inventory-data.service.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/inventory/inventory.component.html","./src/app/inventory/inventory.component.ts","./src/app/EnglishWords/English-Words.component.html","./src/app/EnglishWords/English-Words.component.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/footer/footer.component.ts","./src/app/footer/footer.component.html","./src/app/service/login-data.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {inventoryData} from \"../entities/dataTypes\";\nimport IDealer = inventoryData.IDealer;\n\n@Injectable()\nexport class InventoryDataService {\n  constructor(private http: HttpClient) { }\n\n  // getWords() {\n  //   return this.http.get('https://api.github.com/users');\n  // }\n  getCars() {\n    return this.http.get('https://localhost:5001/api/Cars/');\n  }\n\n  getCarById(id: number) {\n    return this.http.get('https://localhost:5001/api/Cars/' + id);\n  }\n\n  getDealers() : Observable<any>{\n    const url = 'https://localhost:5001/api/Dealers/';\n    const headers = this.buildHeaders();\n    //return this.http.get<any>(`/cors-proxy/${url}`, {headers});\n    return this.http.get<any>(url, {headers});\n  }\n\n  getDealerById(id: number) {\n    return this.http.get('https://localhost:5001/api/Dealers/' + id);\n  }\n\n  private buildHeaders( ): HttpHeaders {\n    let headers: HttpHeaders = new HttpHeaders();\n    headers = headers.append('Content-Type', 'application/json');\n    return headers;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: []\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section class=\"hero is-large is-info\">\n    <div class=\"hero-body\">\n            <div class=\"container has-text-centered\">\n                <h1 class=\"title\">Click the 'Inventory' Menu Item to begin!</h1>\n            </div>\n    </div>\n</section>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<div>\n    <section class=\"section\">\n        <div class=\"container\">\n            <form (ngSubmit)=\"submitForm()\" #textForm=\"ngForm\">\n                <!-- -->\n                <div class=\"field\">\n                    <label class=\"label\">Text</label>\n                    <input type=\"text\" name=\"text\" class=\"input\" [(ngModel)]=\"text\" #textInput=\"ngModel\" required>\n                    <div class=\"help is-error\" *ngIf=\"textInput.invalid && textInput.touched\">input is required.</div>\n                </div>\n\n                <!-- submit button to get the list of words -->\n                <button type=\"submit\"\n                        class=\"button is-medium is-primary\"\n                        [disabled]=\"textForm.invalid\">\n                    Submit\n                </button>\n\n                <div class=\"field\" *ngIf=\"foundWords\">\n                    <label class=\"label\">\n                        Words\n                    </label>\n                    <textarea name=\"words\" class=\"textarea\" [(ngModel)]=\"words\"></textarea>\n                </div>\n            </form>\n        </div>\n    </section>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {InventoryDataService} from \"../service/inventory-data.service\";\nimport {inventoryData} from \"../entities/dataTypes\";\nimport {CharCount} from \"../interfaces/Word\";\nimport IDealer = inventoryData.IDealer;\n\n@Component({\n  selector: 'app-inventory',\n  templateUrl: './inventory.component.html',\n  styleUrls: ['./inventory.component.scss']\n})\nexport class InventoryComponent implements OnInit {\n  dealers: Array<IDealer> = [];\n  text! : string;\n  words! : string[];\n  foundWords! : boolean;\n\n  constructor(private ids: InventoryDataService) { }\n\n  ngOnInit(): void {\n    this.ids.getDealers()\n        .subscribe( results => {\n                this.dealers = results;\n                console.log('Words Received ' + results)\n            },\n                err => {\n                console.log('Error caught at Subscribe: ' + err)\n            },\n            () => console.log ('Processing complete.')\n        );\n  }\n\n  submitForm() {\n    const message = `submitting text: ${this.text}`;\n    console.log(message);\n  }\n\n  private isPresent(randomChars : string, word : string) : boolean {\n    return true;\n  }\n}\n","<div>\n    <section class=\"section\">\n        <div class=\"container\">\n            <form (ngSubmit)=\"submitForm()\" #textForm=\"ngForm\">\n                <!-- -->\n                <div class=\"field\">\n                    <label class=\"label\">Text</label>\n                    <input type=\"text\" name=\"text\" class=\"input\" [(ngModel)]=\"text\" #textInput=\"ngModel\" required>\n                    <div class=\"help is-error\" *ngIf=\"textInput.invalid && textInput.touched\">input is required.</div>\n                </div>\n\n                <!-- submit button to get the list of words -->\n                <button type=\"submit\"\n                        class=\"button is-medium is-primary\"\n                        [disabled]=\"textForm.invalid\">\n                    Submit\n                </button>\n\n                <div class=\"field\" *ngIf=\"foundWords\">\n                    <label class=\"label\">\n                        Words\n                    </label>\n                    <textarea name=\"words\" class=\"textarea\" [(ngModel)]=\"words\"></textarea>\n                </div>\n            </form>\n        </div>\n    </section>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {InventoryDataService} from '../service/inventory-data.service';\nimport {CharCount} from \"../interfaces/Word\";\n\n@Component({\n  selector: 'app-English-Words',\n  templateUrl: './English-Words.component.html',\n  styleUrls: ['./English-Words.component.scss']\n})\nexport class EnglishWordsComponent implements OnInit {\n  text! : string;\n  //words! : string[];\n  words! : string[];\n  foundWords! : boolean;\n  listOfWords! : string[];\n\n  constructor( private wordsService: InventoryDataService) { }\n\n  ngOnInit() {\n      // this.foundWords = false;\n      // this.wordsService.getWords()\n      //     .subscribe( results => {\n      //             if (results.length > 0) {\n      //                 this.listOfWords = results.split(' ');\n      //             }\n      //             console.log('Words Received ' + results)\n      //         },\n      //         err => {\n      //             console.log('Error caught at Subscribe ' + err)\n      //         },\n      //         () => console.log ('Processing complete.')\n      //     )\n  }\n\n  submitForm() {\n    const message = `submitting text: ${this.text}`;\n    console.log(message);\n\n    // this.wordsService.getWords()\n    //     .subscribe( results => {\n    //             if (results.length > 0) {\n    //                 this.listOfWords = results.split(' ');\n    //             }\n    //             console.log('Words Received ' + results)\n    //         },\n    //         err => {\n    //               console.log('Error caught at Subscribe ' + err)\n    //         },\n    //         () => console.log ('Processing complete.')\n    //     )\n\n      // create words\n      this.foundWords = this.findWords(this.text);\n  }\n\n  private isPresent(randomChars : string, word : string) : boolean {\n\n      // Count occurrences of all\n      // characters in randomChars.\n      let tempArr = randomChars.split(\"\");\n      tempArr.sort();\n      let slist : CharCount[];\n      let letters : string[] = [];\n      let count = 1; // no of occurrence\n      for (let i=0; i<tempArr.length; i++){\n          if (tempArr[i] === tempArr[i+1]) {\n              count++;\n          } else {\n              let value = count + tempArr[i];\n              letters = [...letters, value];\n              count = 1; // reset counter\n          }\n      }\n\n\n      // Check if number of occurrences of\n      // every character in q is less than\n      // or equal to that in s.\n      // for (int i = 0; i < q.Length; i++)\n      // {\n      //     freq[q[i]]--;\n      //\n      //     if (freq[q[i]] < 0)\n      //         return false;\n      // }\n      return true;\n  }\n  private findWords(text : string) : boolean {\n      this.words = [];\n      //\n      // this.words.push(text);\n      // this.words.push(\"2\");\n      // this.words.push(\"3\");\n      this.isPresent(\"odddgooo\", \"dog\");\n      this.listOfWords.forEach(word => this.words.push(word));\n      return true;\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `\n    <!-- header -->\n    <app-header></app-header>\n\n    <router-outlet></router-outlet>\n    <!-- routes get injected here -->\n<!--    <router-outlet></router-outlet>-->\n    <!-- footer -->\n    <app-footer></app-footer>\n  `,\n  styles: []\n})\nexport class AppComponent {\n  title = 'Inventory-System';\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { EnglishWordsComponent } from './EnglishWords/English-Words.component';\nimport { FormsModule } from \"@angular/forms\";\nimport {from} from \"rxjs\";\nimport { FooterComponent } from './footer/footer.component';\nimport { HomeComponent } from './home/home.component';\nimport { InventoryDataService } from './service/inventory-data.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { LoginDataService } from \"./service/login-data.service\";\nimport { InventoryComponent } from './inventory/inventory.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    EnglishWordsComponent,\n    FooterComponent,\n    HomeComponent,\n    InventoryComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [\n    InventoryDataService,\n    LoginDataService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  // styleUrls: ['./header.component.scss']\n  styles: []\n})\nexport class HeaderComponent implements OnInit {\n  version!: string;\n  constructor() { }\n\n  ngOnInit(): void {\n    this.version = \"version 1\";\n  }\n\n}\n","<div class=\"navbar is-dark\">\n    <!-- logo -->\n    <div class=\"navbar-brand\">\n        <a class=\"navbar-item\">\n        </a>\n    </div>\n    <!-- menu -->\n    <div class=\"navbar-menu\">\n        <div class=\"navbar-end\">\n            <a class=\"navbar-item\" routerLink=\"/\">Home</a>\n            <a class=\"navbar-item\" routerLink=\"/Inventory\">Inventory</a>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer class=\"footer\">\n    <div class=\"Container content has-text-centred\">\n        <p>Developed by Francis Trinh</p>\n    </div>\n</footer>\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {of} from \"rxjs\";\n\n@Injectable()\nexport class LoginDataService {\n    constructor(private http: HttpClient) {\n    }\n\n    getUserCredentials(login: string) {\n        this.getUsers(login);\n        return of({id: 2, user: 'Mercedes-Benz Melbourne'});\n    }\n\n    private getUsers(login: string){\n        const mockJson = [\n            {id: 1, user: '3 Point Motors Mercedes-Benz'},\n            {id: 2, user: 'Mercedes-Benz Melbourne'},\n            {id: 3, user: 'Mercedes-Benz Toorak'},\n            {id: 4, user: '3 Point Motors Fairfield'},\n            {id: 5, user: 'Silver Star Motors'}\n        ];\n        return of(mockJson);\n    }\n}\n\n//private getFutureAttendance(user: string, password: string)\n// {\n//     const json = [\n//         {\n//             id: 26,\n//             type: 3,\n//             source: 0,\n//             dayPeriodType: 0,\n//             groupId: null,\n//             yearLevelId: null,\n//             reasonType: 17,\n//             notes: '',\n//             estArrival: ' ',\n//             estDeparture: '',\n//             communicationType: null,\n//             studentIds: [],\n//             dates: [\n//                 '2016-04-01T00:00:00'\n//             ],\n//             parentPortalId: 21,\n//             userId: null,\n//             recurringAbsenceId: null\n//         },\n//         {\n//             id: 26,\n//             type: 0,\n//             source: 2,\n//             dayPeriodType: 0,\n//             groupId: null,\n//             yearLevelId: null,\n//             reasonType: 29,\n//             notes: '',\n//             estArrival: ' ',\n//             estDeparture: '',\n//             communicationType: null,\n//             studentIds: [\n//                 74\n//             ],\n//             dates: [\n//                 '2016-04-01T00:00:00'\n//             ],\n//             parentPortalId: 21,\n//             userId: null,\n//             recurringAbsenceId: null\n//         },\n//         {\n//             id: 26,\n//             type: 2,\n//             source: 0,\n//             dayPeriodType: 0,\n//             groupId: null,\n//             yearLevelId: null,\n//             reasonType: 9,\n//             notes: '',\n//             estArrival: ' ',\n//             estDeparture: '',\n//             communicationType: null,\n//             studentIds: [],\n//             dates: [\n//                 '2016-04-02T00:00:00'\n//             ],\n//             parentPortalId: 42,\n//             userId: null,\n//             recurringAbsenceId: null\n//         },\n//         {\n//             id: 26,\n//             type: 0,\n//             source: 2,\n//             dayPeriodType: 2,\n//             groupId: 109,\n//             yearLevelId: 4,\n//             reasonType: 24,\n//             notes: '',\n//             estArrival: ' ',\n//             estDeparture: '',\n//             communicationType: null,\n//             studentIds: [\n//                 98\n//             ],\n//             dates: [\n//                 '2016-04-02T00:00:00'\n//             ],\n//             parentPortalId: 42,\n//             userId: null,\n//             recurringAbsenceId: null\n//         },\n//         {\n//             id: 26,\n//             type: 0,\n//             source: 1,\n//             dayPeriodType: 0,\n//             groupId: null,\n//             yearLevelId: null,\n//             reasonType: 16,\n//             notes: '',\n//             estArrival: ' ',\n//             estDeparture: '',\n//             communicationType: null,\n//             studentIds: [\n//                 125,\n//                 94,\n//                 95,\n//                 96,\n//                 97,\n//                 98\n//             ],\n//             dates: [\n//                 '2016-04-03T00:00:00'\n//             ],\n//             parentPortalId: 22,\n//             userId: null,\n//             recurringAbsenceId: null\n//         },\n//         {\n//             id: 26,\n//             type: 0,\n//             source: 2,\n//             dayPeriodType: 1,\n//             groupId: null,\n//             yearLevelId: null,\n//             reasonType: 30,\n//             notes: '',\n//             estArrival: '',\n//             estDeparture: '',\n//             communicationType: null,\n//             studentIds: [\n//                 110\n//             ],\n//             dates: [\n//                 '2016-04-20T00:00:00'\n//             ],\n//             parentPortalId: '',\n//             userId: 1,\n//             recurringAbsenceId: 8\n//         }\n//     ];\n//     return of(json);\n// }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { InventoryComponent } from './inventory/inventory.component';\nimport {HomeComponent} from \"./home/home.component\";\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent\n  },\n  {\n    path: 'Inventory',\n    component: InventoryComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}